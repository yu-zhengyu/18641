package model;
import java.io.Serializable;
import model.OptionSet.Option;
/**
 * @version  1.0
 * @author YuZheng
 * @Date 9/14/2015
 * 
 * This class is a test file, which would create a Automotive class,
 * is implements the Serializable interface. Provide many functions to deal witt 
 * the option set and option. ALL CRUD functions are provided.
 */ 

public class Automobile implements Serializable {
	private static final long serialVersionUID = -2647584167364070782L;
	
	private String name;
	private float baseprice;
	private OptionSet opset[];
	
	// Construction
	public Automobile (int size, String n, float baseprice) {
		opset = new OptionSet[size]; 
		name = n;
		this.baseprice = baseprice;
		for(int i=0;i<opset.length;i++) 
			this.opset[i] = new OptionSet();
	}
	
	public Automobile() {}
	
	
	// all getter and setter generated by IDE
	public OptionSet[] getOpset() {
		return opset;
	}
	public void setOpset(OptionSet[] opset) {
		this.opset = opset;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public float getBaseprice() {
		return baseprice;
	}
	public void setBaseprice(float baseprice) {
		this.baseprice = baseprice;
	}
	
	/** 
	 * Additional getters and setters
	 */
	// find or get option set
	public OptionSet getOpset (int index) {
		if (index > opset.length || index < 0 || opset[index] == null)
			return null;
		else
			return opset[index];
	}
	public OptionSet getOpset (String name) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i].getName().equals(name))
				return opset[i];
		}
		return null;
	}
	
	// set option set
	public void setOpset (OptionSet opset, int index) {
		if (index > this.opset.length || index < 0)
			return;
		else
			this.opset[index] = opset;
	}
	public void setOpset (int index, String name, int size) {
		if (index > this.opset.length || index < 0)
			return;
		else {
			this.opset[index] = new OptionSet(name, size);
		}
	}
	public void setOpset (String name, int size) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i] == null) {
				opset[i] = new OptionSet(name, size);
			}
		}
	}
	
	// find option set by name
	public OptionSet findOpset (String name) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i] != null) {
				if (opset[i].getName().equals(name)) 
					return opset[i];
			}
		}
		return null;
	}
	
	// Update Option Set
	public void updateOptionSet (int index, String name, int size) {
		if (index < 0 || index > opset.length)
			return;
		opset[index] = new OptionSet(name, size);
	}
	public void updateOptionSet (String oldname, String name, int size) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i].getName().equals(oldname)) {
				opset[i] = new OptionSet(name, size);
			}
		}
	}
	
	// Update Option set name only
	public void updateOptionSetNmae (int index, String name) {
		if (index < 0 || index > opset.length)
			return;
		opset[index].setName(name);
	}
	public void updateOptionSetNmae (String oldname, String name) {
		if (findOpset(oldname) != null)
			findOpset(oldname).setName(name);
	}
	
	
	// Delete the option set using its index
	public void deleteOptionSet (int index) {
		if (index < 0 || index > opset.length)
			return;
		if (opset[index] != null)
			opset[index] = null;
	}
	
	// delete the option set using its name
	public void deleteOptionSet (String name) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i].getName().equals(name)) {
				opset[i] = null;
			}
		}
	}
	
	// get option
	public Option findOption (int index, String opname) {
		if (index >= 0 && index < opset.length) {
			return opset[index].getOption(opname);
		}
		return null;
	}
	
	// find option by option name
	public Option findOption (String opsetname, String opname) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i].getName().equals(opsetname)) {
				return opset[i].getOption(opname);
			}
		}
		return null;
	}
	
	// set option
	public void setOption (int index, String name, float price) {
		if (getOpset(index) != null) {
			getOpset(index).setOption(name, price);
		}
	}
	
	public void setOption(String setName, String name, float price) {
		if (findOpset(setName) != null) {
			findOpset(setName).setOption(name, price);
		}
	}
	
	public void setOption(int opsetindex, int opindex, String name, float price) {
		if(opsetindex >= 0 && opsetindex < opset.length) {
			opset[opsetindex].setOption(opindex, name, price);
		}
	}
	
	// delete option using the index
	public void deleteOption (int index, String opname) {
		if (index == 0 && index < opset.length) {
			if (opset[index] != null)
				opset[index].deleteOption(opname);
		}
	}
	// delete option using the option set name
	public void deleteOption (String opsetname, String opname) {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i].getName().equals(opsetname)) {
				opset[i].deleteOption(opname);
			}
		}
	}
	
	// Update option name only by using the index
	public void updateOptionName (int index, String oldname, String name) {
		if (index >= 0 && index < opset.length) {
			opset[index].updateOptionName(oldname, name);
		}
	}
	// Update option name only by using the opiton set name
	public void updateOptionName (String opsetname, String oldname, String name) {
		if (findOpset(opsetname) != null)
			findOpset(opsetname).updateOptionName(oldname, name);
	}
	
	// Update option price only
	public void updateOptionPrice (int index, String name, float price) {
		if (index >= 0 && index < opset.length) {
			opset[index].updateOptionprice(name, price);
		}
	}
	// update the option price 
	public void updateOptionPrice (String opsetname, String name, float price) {
		if (findOpset(opsetname) != null)
			findOpset(opsetname).updateOptionprice(name, price);
	}
	
	
	// Print Information
	public void printBasicInfomation () {
		System.out.println("The model name is: " + getName());
		System.out.println("The basic price is: " + getBaseprice());
		System.out.println();
	}
	
	// print the detail information about the option
	public void printoption() {
		for (int i = 0; i < opset.length; i++) {
			if (opset[i] != null) {
				System.out.println(opset[i].getName());
				System.out.println("--------------------");
				opset[i].printoption();
				System.out.println();
			}
		}
	}

}
